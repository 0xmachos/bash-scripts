#!/usr/bin/env bash
# shell-scripts/add_sudo_user

# add_sudo_user
# 	Create a new user account
# 	Add account to sudo group
# 	Add an SSH public key to authorized_keys for passwordless SSH acess 


set -euo pipefail
# -e exit if any command returns non-zero status code
# -u prevent using undefined variables
# -o pipefail force pipelines to fail on first non-zero status code


FATAL="\\033[1;31mFATAL\\033[0m"
WARNING="\\033[1;33mWARNING\\033[0m"
PASS="\\033[1;32mPASS\\033[0m"
# INFO="\\033[1;36mINFO\\033[0m"


function usage {
	
	echo -e "\\nCreate a new user, add them to the sudo group and optionally add an SSH key\\n"
	echo "Usage:"
	echo "  ./add_sudo_user [username] {ssh public key}"
  exit 0
 }


function add_user {

	# Check if user already exsists
	if id -u "${1}" > /dev/null 2>&1 ; then 
		echo -e "[${FATAL}] User ${1} already exsits"
		return 1
	fi

	# Add username as a user
	if sudo adduser --quiet --gecos " " "${1}" ; then
		echo -e "[${PASS}] Sucessfully added user '${1}'"
	else
		echo -e "[${FATAL}] Failed to add user '${1}'"
		return 1
	fi


	# Add username to the sudo group
	# allows them ROOT via sudo command
	if sudo adduser --quiet "${1}" "sudo" ; then 
		echo -e "[${PASS}] Sucessfully added user '${1}' to group 'sudo'"
	else
		echo -e "[${FATAL}] Failed to add user '${1}' to group 'group'"
		return 1
	fi
}


function add_ssh_public_key {

	# Create /home/${username}/.ssh
	if sudo -u "${username}" mkdir -p "${$HOME}"/.ssh ; then
		echo -e "[${PASS}] Sucessfully created ${$HOME}/.ssh"
	else
		echo -e "[${FATAL}] Failed to create ${$HOME}/.ssh"
		return 1
	fi


	# Append ssh_public_key to /home/${username}/.ssh/authorized_keys
	if sudo -u "${username}" bash -c  "echo ${1} >> ${$HOME}/.ssh/authorized_keys" ; then
		echo -e "[${PASS}] Sucessfully added ${1} to ${$HOME}/.ssh/authorized_keys"
	else
		echo -e "[${FATAL}] Failed to add ${1} to ${$HOME}/.ssh/authorized_keys"
		return 1
	fi
}

function main {

	username=${1:-""}
	ssh_public_key=${2:-""}

	if [[ $# -eq 0 ]] ; then
		usage
	fi

	add_user "${username}"

	if ! [ -z "${ssh_public_key}" ]; then
		add_ssh_public_key "${ssh_public_key}"
	else
		echo -e "[${WARNING}] No SSH Public Key specified"
	fi
}

main "$@"
