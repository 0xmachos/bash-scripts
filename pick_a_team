#!/usr/bin/env bash
# bash-scripts/pick_a_team

# pick_a_team
#   Pick a team at random from the English Premier League and Championship

set -euo pipefail
# -e exit if any command returns non-zero status code
# -u prevent using undefined variables
# -o pipefail force pipelines to fail on first non-zero status code

### Define Colours ###
tput sgr0; 
# reset colors

readonly RESET=$(tput sgr0)
readonly BOLD=$(tput bold)
readonly RED=$(tput setaf 1)
readonly GREEN=$(tput setaf 64)
### END Colours ###


function prem {

  local -i count=0
  local prem_teams

  prem_teams="$(curl -s -H "X-Auth-Token:${API_KEY}" -X GET http://api.football-data.org/v2/competitions/2021/teams)"
  prem_team_nums="$(echo "${prem_teams}" | python -c 'import json,sys; obj=json.load(sys.stdin); print len(obj["teams"]);')"

  while [  ${count} -lt ${prem_team_nums} ]; do
    prem_team="$(echo "${prem_teams}" | python -c "import json,sys; obj=json.load(sys.stdin); print obj['teams'][${count}]['name'];")"
    teams+=("${prem_team}")
    (( count=count+1 ))
  done
}


function champ {

  local -i count=0
  local champ_teams

  champ_teams="$(curl -s -H "X-Auth-Token:${API_KEY}" -X GET http://api.football-data.org/v2/competitions/2016/teams)"
  champ_team_nums="$(echo "${champ_teams}" | python -c 'import json,sys; obj=json.load(sys.stdin); print len(obj["teams"]);')"

  while [  ${count} -lt ${champ_team_nums} ]; do
    champ_team="$(echo "${champ_teams}" | python -c "import json,sys; obj=json.load(sys.stdin); print obj['teams'][${count}]['name'];")"
    teams+=("${champ_team}")
    (( count=count+1 ))
  done
}


function main {

  readonly API_KEY=""
  # https://www.football-data.org
  declare -a teams
  declare -i index
  declare -i index_max

  prem
  champ

  index_max="${#teams[@]}"
  index="$((1 + RANDOM % ${index_max}))"

  # echo -e "\nTeam:"
  echo -e "\n  ${RED}${teams[${index}]}${RESET}\n"
}

main "$@"
